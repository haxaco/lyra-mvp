// Auto-generated by Figma Make â€” version: v1.0.0
"use client";

import * as React from "react";
import { cn } from "./utils";

// Variants: default (can be extended with data-variant attribute)
const UICard = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => {
    return (
      <div
        ref={ref}
        data-slot="card"
        className={cn(
          "bg-card text-card-foreground flex flex-col gap-6 rounded-xl border",
          className,
        )}
        {...props}
      />
    );
  }
);
UICard.displayName = "UICard";

const UICardHeader = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => {
    return (
      <div
        ref={ref}
        data-slot="card-header"
        className={cn(
          "@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 pt-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",
          className,
        )}
        {...props}
      />
    );
  }
);
UICardHeader.displayName = "UICardHeader";

const UICardTitle = React.forwardRef<HTMLHeadingElement, React.ComponentProps<"h4">>(
  ({ className, ...props }, ref) => {
    return (
      <h4
        ref={ref}
        data-slot="card-title"
        className={cn("leading-none", className)}
        {...props}
      />
    );
  }
);
UICardTitle.displayName = "UICardTitle";

const UICardDescription = React.forwardRef<HTMLParagraphElement, React.ComponentProps<"p">>(
  ({ className, ...props }, ref) => {
    return (
      <p
        ref={ref}
        data-slot="card-description"
        className={cn("text-muted-foreground", className)}
        {...props}
      />
    );
  }
);
UICardDescription.displayName = "UICardDescription";

const UICardAction = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => {
    return (
      <div
        ref={ref}
        data-slot="card-action"
        className={cn(
          "col-start-2 row-span-2 row-start-1 self-start justify-self-end",
          className,
        )}
        {...props}
      />
    );
  }
);
UICardAction.displayName = "UICardAction";

const UICardContent = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => {
    return (
      <div
        ref={ref}
        data-slot="card-content"
        className={cn("px-6 [&:last-child]:pb-6", className)}
        {...props}
      />
    );
  }
);
UICardContent.displayName = "UICardContent";

const UICardFooter = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => {
    return (
      <div
        ref={ref}
        data-slot="card-footer"
        className={cn("flex items-center px-6 pb-6 [.border-t]:pt-6", className)}
        {...props}
      />
    );
  }
);
UICardFooter.displayName = "UICardFooter";

export {
  UICard,
  UICardHeader,
  UICardFooter,
  UICardTitle,
  UICardAction,
  UICardDescription,
  UICardContent,
};
